<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  package="com.example">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>

    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <!-- Push service 运行需要的权限 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />

    <!-- 适配Android N系统必需的ContentProvider写权限声明，写权限包含应用包名-->
    <uses-permission android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.fcscs.nextgen" />
    <permission
        android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.fcscs.nextgen"
        android:protectionLevel="signature">
    </permission>
    <!-- Push service 运行需要的权限 END -->

    <!-- 小米代理运行需要的权限 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- 小米推送权限 -->
    <permission
        android:name="com.fcscs.nextgen.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.fcscs.nextgen.permission.MIPUSH_RECEIVE" />
    <!-- 小米代理运行需要的权限 END -->

    <application
      android:name=".MainApplication"
      android:label="@string/app_name"
      android:icon="@mipmap/ic_launcher"
      android:roundIcon="@mipmap/ic_launcher_round"
      android:allowBackup="true"
      android:theme="@style/AppTheme"
      android:usesCleartextTraffic="true">
      <activity
        android:name=".MainActivity"
        android:label="@string/app_name"
        android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
        android:launchMode="singleTask"
        android:windowSoftInputMode="adjustResize">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
      </activity>
      <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />

      <receiver android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationActions" />
      <receiver android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher" />
      <receiver android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver">
          <intent-filter>
              <action android:name="android.intent.action.BOOT_COMPLETED" />
              <action android:name="android.intent.action.QUICKBOOT_POWERON" />
              <action android:name="com.htc.intent.action.QUICKBOOT_POWERON"/>
          </intent-filter>
      </receiver>

      <service
          android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService"
          android:exported="false" >
          <intent-filter>
              <action android:name="com.google.firebase.MESSAGING_EVENT" />
          </intent-filter>
      </service>

      <meta-data  android:name="com.dieam.reactnativepushnotification.notification_foreground"
                  android:value="false"/>
      <meta-data  android:name="com.dieam.reactnativepushnotification.notification_color"
                  android:resource="@android:color/white"/>

        <!-- push必须的组件声明 -->
        <!-- 用于接收系统消息以保证PushService正常运行 -->
        <receiver
            android:name="com.baidu.android.pushservice.PushServiceReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.notification.SHOW" />
                <!-- 以下六项为可选的action声明，可大大提高service存活率和消息到达速度 -->
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>

        <!-- Push服务接收客户端发送的各种请求-->
        <receiver
            android:name="com.baidu.android.pushservice.RegistrationReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.METHOD" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.baidu.android.pushservice.PushService"
            android:exported="true"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.PUSH_SERVICE" />
            </intent-filter>
        </service>

        <!-- 4.4版本新增的CommandService声明，提升小米和魅族手机上的实际推送到达率 -->
        <service
            android:name="com.baidu.android.pushservice.CommandService"
            android:exported="true" />

        <!-- 适配Android N系统必需的ContentProvider声明，写权限包含应用包名-->
        <provider
            android:name="com.baidu.android.pushservice.PushInfoProvider"
            android:authorities="com.fcscs.nextgen.bdpush"
            android:exported="true"
            android:process=":bdservice_v1"
            android:protectionLevel="signature"
            android:writePermission="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.fcscs.nextgen" />

        <!-- 可选声明, 提升push消息送达率 -->
        <service
            android:name="com.baidu.android.pushservice.job.PushJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":bdservice_v1" />
        <!-- push必须的组件声明 END -->

        <!-- 华为代理推送必需组件 -->
        <activity
            android:name="com.baidu.android.pushservice.hwproxy.HwNotifyActivity"
            android:exported="true"
            android:launchMode="singleTask"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <data
                    android:host="bdpush"
                    android:path="/hwnotify"
                    android:scheme="baidupush" />
            </intent-filter>
        </activity>

        <!-- 华为HMS接入声明service -->
        <service
            android:name="com.baidu.android.pushservice.HmsPushPatchMessageService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- 华为代理推送必需组件 END -->

        <!-- 小米代理推送必需组件 -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />

        <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />

        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>

        <receiver android:name="com.baidu.android.pushservice.PushPatchMessageReceiver">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- 小米代理推送必需组件 END -->

        <!-- 魅族代理推送必需组件 -->
        <activity
            android:name="com.baidu.android.pushservice.mzproxy.MzNotifyActivity"
            android:launchMode="singleTask"
            android:theme="@android:style/Theme.NoDisplay" />

        <receiver android:name="com.baidu.android.pushservice.MzPushPatchMessageReceiver">
            <intent-filter>
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
            </intent-filter>
        </receiver>
        <!-- 魅族代理推送必需组件 END -->

        <!-- OPPO代理推送必需组件 -->
        <activity
            android:name="com.baidu.android.pushservice.opproxy.OpNotifyActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="true"
            android:launchMode="singleInstance"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="com.fcscs.nextgen.action.RECEIVE_MCS_MESSAGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <!-- OPPO代理推送必需组件 END -->

        <!-- VIVO代理推送必需组件 -->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />

        <receiver android:name="com.baidu.android.pushservice.viproxy.ViPushMessageReceiver">
            <intent-filter>
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>

        <!-- 此处Receiver名字修改为当前包名路径 -->
        <receiver android:name="com.dieam.reactnativepushnotification.baidu.BaiduPushMessageReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.baidu.android.pushservice.action.MESSAGE" />
                <!-- 接收bind、setTags等method的返回结果-->
                <action android:name="com.baidu.android.pushservice.action.RECEIVE" />
                <!-- 接收通知点击事件，和通知自定义内容 -->
                <action android:name="com.baidu.android.pushservice.action.notification.CLICK" />

                <!-- 使用华为代理功能必须声明,用于接收华为的透传 -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="INSERT YOUR OWN VIVO APIKEY HERE" />

        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="INSERT YOUR OWN VIVO APPID HERE" />
        <!-- VIVO代理推送必需组件 END -->

        <!-- 在百度开发者中心查询应用的API Key TODO add to root project -->
        <meta-data
            android:name="api_key"
            android:value="4npw0NG3di50SaibRLi36avS" />

        <meta-data
            android:name="push_kit_auto_init_enabled"
            android:value="true" />
    </application>

</manifest>
